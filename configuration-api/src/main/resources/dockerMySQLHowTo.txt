The mysql docker image to use for testing is

672812193635.dkr.ecr.us-east-1.amazonaws.com/mysql:essi-0.1.3-configured

Launch it with

docker run -p 3306:3306 -e MYSQL_ROOT_PASSWORD=pdw -d 672812193635.dkr.ecr.us-east-1.amazonaws.com/mysql:essi-0.1.3-configured

The image is built using the Dokerfile in src/test/resources/docker of this project (note that if you want to copy the Dockerfile to a different folder before building,
you must copy the sh in the same destination folder). The Dockerfile is a modification of the Dockerfile at

https://github.com/docker-library/mysql/blob/6b1dc54320b03b83a89068f49cc796fea0ff6bb4/5.7/Dockerfile

Baasically, I removed the VOLUME declaration for /var/lib/mysql so that its content could be committed to an image (for persisting the mysql configuration).
I also had to insert the chmod command at line 69.




--------------- Old way --------------
Start MySQL

docker run --name quartzmysqlconfig -p 3306:3306 -v LOCAL_FOLDER:/mytmp -e MYSQL_ROOT_PASSWORD=pdw -d mysql:5.7.18
docker exec -i -t quartzmysqlconfig /bin/bash
cp /mytmp/tables_mysql.sql .
mysql -u root -p
create database quartzJobStore;
exit;
mysql -u root -p quartzJobStore < tables_mysql.sql

The tables creation script is in src/test/resources. It was extracted from the 2.2.3 distribution of quartz @ http://d2zwv9pap9ylyd.cloudfront.net/quartz-2.2.3-distribution.tar.gz
Before to run the script with MySQL Workbench, select the target database by double-clicking the db name  its name in the SCHEMAS list in the sidebar.

Once you have set this up, you can just re-run

mysql -u root -p quartzJobStore < tables_mysql.sql

to reset you db and re-run tests