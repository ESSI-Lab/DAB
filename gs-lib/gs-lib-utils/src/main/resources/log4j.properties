# Log4j hierarchy, works in the following way: if a logger is set to level, e.g., ERROR -> only logs with level FATAL and ERROR are shown
#TRACE,
#DEBUG,
#INFO,
#WARN,
#ERROR
#FATAL

# the following is for production environment: level is set to info and written to console (CA) and to file FOUT (which has max size 10MB and 2 backup copies)
#log4j.rootLogger=INFO, CA, FOUT
#TODO maybe we can define the eu.essi_lab logger to debug in file appender but log4j.logger.eu.essi_lab=DEBUG, FOUT does not work and neither defing a different fileout

# the following is for production environment: the root logger level is set to info and written to console (CA)
#and eu.essi_lab package logging is set to TRACE for debugging our code
log4j.rootLogger=INFO, CA
log4j.logger.eu.essi_lab=TRACE


log4j.appender.CA=org.apache.log4j.ConsoleAppender
log4j.appender.CA.layout=org.apache.log4j.PatternLayout
log4j.appender.CA.layout.ConversionPattern=${HostName}-[%p] [%d{yyyy-MM-dd HH:mm:ss.SSS}] [%t] [%c] %m%n

log4j.appender.FOUT.File=${catalina.home}/logs/gi-suite.log
log4j.appender.FOUT=org.apache.log4j.RollingFileAppender
log4j.appender.FOUT.layout=org.apache.log4j.PatternLayout
log4j.appender.FOUT.layout.ConversionPattern=${HostName}-[%p] [%d{yyyy-MM-dd HH:mm:ss.SSS}] [%t] [%c] %m%n
log4j.appender.FOUT.MaxFileSize=10MB
log4j.appender.FOUT.MaxBackupIndex=2

log4j.logger.org.apache.http.client.protocol=ERROR
log4j.logger.httpclient.wire=ERROR
log4j.logger.org.quartz=ERROR
log4j.logger.org.exist=ERROR
log4j.logger.org.springframework=ERROR
log4j.logger.org.apache.cxf=ERROR

log4j.logger.com.marklogic.client=WARN

#log4j.logger.org.eclipse.rdf4j=trace
 