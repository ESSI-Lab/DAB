<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>eu.essi_lab</groupId>
	<artifactId>DAB</artifactId>
	<version>1.0-SNAPSHOT</version>
	<packaging>pom</packaging>

	<name>ESSI-Lab DAB</name>
	<description><![CDATA[The suite of ESSI-Lab DAB related software products.
	
    ESSI-Lab is the Earth &amp; Space Science Informatics Laboratory of the Institute of Atmospheric
    Pollution Research of the National Research Council of Italy (CNR-IIA), Florence Research Unit,
    Area della Ricerca di Firenze, Via Madonna del Piano 10, 50019 Sesto Fiorentino, Florence, Italy.
    ]]>
    </description>

	<url>http://www.essi-lab.eu/</url>

	<organization>
		<name>Earth &amp; Space Science Informatics-Laboratory (ESSI-Lab)</name>
		<url>http://www.essi-lab.eu/</url>
	</organization>

	<inceptionYear>2021</inceptionYear>
	<licenses>
		<license>
			<name>agpl_v3</name>
		</license>
	</licenses>
	
	<prerequisites>
		<maven>3.0</maven>
	</prerequisites>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<fabric8-timeout>600000</fabric8-timeout>
		<fabric8-no-ping-timeout>10000</fabric8-no-ping-timeout>

		<antplugin.version>1.8</antplugin.version>
		<sonar.plugin.version>3.9.0.2155</sonar.plugin.version>
		<maven-jaxb-plugin.version>2.5.0</maven-jaxb-plugin.version>

		<!--  Docker plugin (J11 UPDATED) -->
		<docker.plugin.version>0.44.0</docker.plugin.version>

		<!-- Apache CXF (J11 UPDATED) -->
		<cxf.version>3.3.13</cxf.version>

		<!-- JAX WS RS API-->
		<jax-ws-rs-api.version>2.1.1</jax-ws-rs-api.version>

		<!-- JAX WS API (commented Jakarta EE 9 dep) -->
		<!-- <jakarta.xml.ws-api.version>4.0.1</jakarta.xml.ws-api.version> -->
		<jax-ws-api.version>2.3.1</jax-ws-api.version>

		<!-- JAX XML SOAP API-->
		<jax-xml-soap-api.version>1.4.0</jax-xml-soap-api.version>

		<!-- JAVA Servlet API (commented Jakarta EE 9 dep) -->
		<!-- <jakarta.servlet-api.version>6.0.0</jakarta.servlet-api.version> -->
		<java.servlet-api.version>4.0.1</java.servlet-api.version>

		<!-- Google Sheets API (J11 UPDATED) -->
		<google-api-services-sheets.version>v4-rev20240416-2.0.0</google-api-services-sheets.version>

		<!-- Core Protocol Buffers library (J11 UPDATED) -->
		<com.google.protobuf-protobuf-java.version>3.25.3</com.google.protobuf-protobuf-java.version>

		<!-- Apache Commons Math (J11 UPDATED) -->
		<org.apache.commons-commons-math.version>3.6.1</org.apache.commons-commons-math.version>

		<!-- Apache Commons Compress (J11 UPDATED) -->
		<org.apache.commons-commons-compress.version>1.26.1</org.apache.commons-commons-compress.version>

		<!-- Apache Commons Net library (J11 UPDATED) -->
		<commons-net.version>3.10.0</commons-net.version>

		<!-- Apache Commons Lang (J11 UPDATED) -->
		<org.apache-commons-commons-lang3.version>3.14.0</org.apache-commons-commons-lang3.version>

		<!-- Apache POI - Java API To Access Microsoft Format Files (J11
		UPDATED) -->
		<org.apache.poi-poi.version>4.1.2</org.apache.poi-poi.version>

		<!-- Apache Jena - Java framework for building Semantic Web and Linked
		Data applications (J11 UPDATED) -->
		<org.apache.jena.version>4.10.0</org.apache.jena.version>

		<!-- Saxon - XSLT and XQuery Processor (J11 UPDATED) -->
		<saxon-he.version>9.7.0-15</saxon-he.version>

		<!-- NetCDF (nothing to upate) -->
		<netcdf.version>4.6.15</netcdf.version>

		<!-- Sesame (project moved to Rio API) (J11 UPDATED) -->
		<sesame.version>4.1.2</sesame.version>

		<!-- API for the Unified Expression Language 3.0 (J11 UPDATED) -->
		<javax.el-el-api.version>3.0.1-b06</javax.el-el-api.version>

		<!-- Expression Language 3.0 (J11 UPDATED) -->
		<org.glassfish-javax.el.version>3.0.1-b12</org.glassfish-javax.el.version>

		<!-- Hibernate's Jakarta Bean Validation reference implementation (J11
		UPDATED) -->
		<org.hibernate.version>6.2.5.Final</org.hibernate.version>

		<!-- AWS IoT Device SDK Java (J11 UPDATED) -->
		<aws-iot-device-sdk.version>1.20.5</aws-iot-device-sdk.version>

		<!-- The AWS SDK for Java - BOM module (J11 UPDATED) -->
		<aws-java-sdk-bom.version>1.12.709</aws-java-sdk-bom.version>

		<!-- S3 Transfer Manager (J11 UPDATED) -->
		<s3-transfer-manager.version>2.25.40</s3-transfer-manager.version>

		<!-- Authzforce (to update it, some code changes are required) -->
		<authzforce.version>13.3.1</authzforce.version>

		<!-- Cloud Localstack  (J11 UPDATED) -->
		<cloud.localstack.version>0.1.22</cloud.localstack.version>

		<!-- MarkLogic (J11 UPDATED) -->
		<xcc.version>11.1.0</xcc.version>
		<marklogic-client-api.version>6.5.0</marklogic-client-api.version>

		<!-- Vaadin (J11 UPDATED) -->
		<vaadin.version>23.4.0</vaadin.version>
		<vaadin.togglebutton.version>3.0.0</vaadin.togglebutton.version>

		<!-- GeoTools (J11 UPDATED) -->
		<geotools-version>29.5</geotools-version>

		<!-- Quartz (J11 UPDATED) -->
		<quartz.version>2.3.2</quartz.version>

		<!-- MySQL (J11 UPDATED) -->
		<mysql.connector.version>8.3.0</mysql.connector.version>

		<!-- GeoNames (J11 UPDATED) -->
		<geonames.version>1.1.17</geonames.version>

		<!-- Status (J11 UPDATED) -->
		<status.version>1.0.40-7dabb3b</status.version>

		<!-- Failsafe  (J11 UPDATED) -->
		<dev.failsafe.version>3.3.2</dev.failsafe.version>

		<!-- HIVE Client (J11 UPDATED) -->
		<hivemq-mqtt-client.version>1.3.3</hivemq-mqtt-client.version>

		<!-- ROME (J11 UPDATED) -->
		<com.rometools.rome.version>2.1.0</com.rometools.rome.version>

		<!-- Javax mail (J11 UPDATED) -->
		<!-- Relocated to Jakarta Mail API -->
		<javax.mail-api.version>1.6.2</javax.mail-api.version>

		<!-- Jfree chart (J11 UPDATED) -->
		<jfreechart.version>1.5.4</jfreechart.version>

		<!-- Tagsoup (J11 UPDATED) -->
		<org.ccil.cowan.tagsoup.version>1.2.1</org.ccil.cowan.tagsoup.version>

		<!-- XChart (J11 UPDATED) -->
		<org.knowm.xchart-xchart.version>3.8.7</org.knowm.xchart-xchart.version>

		<!-- MyBatis (J11 UPDATED) -->
		<org.mybatis.version>3.5.16</org.mybatis.version>

		<!-- Schematron validator and plugin (J11 UPDATED) -->
		<com.helger-ph-schematron-validator.version>5.6.5</com.helger-ph-schematron-validator.version>

		<!-- Redis client (J11 UPDATED) -->
		<redis.clients-jedis.version>5.1.2</redis.clients-jedis.version>

		<!-- OkHttp (J11 UPDATED) -->
		<com.squareup.okhttp3-okhtt.version>4.12.0</com.squareup.okhttp3-okhtt.version>

		<!-- Jackson JAXRS: JSON (J11 UPDATED) -->
		<jackson.version>2.15.0</jackson.version>

		<!-- EclipseLink (J11 UPDATED) -->
		<!-- From version 3.x it depends from Jakarta XML bind -->
		<eclipselink.version>2.7.14</eclipselink.version>

		<!-- Eclipse Paho Client Mqttv3 (J11 UPDATED) -->
		<org.eclipse.paho.client.mqttv3.version>1.2.5</org.eclipse.paho.client.mqttv3.version>

		<!-- OpenSearch client (J11 UPDATED) -->
		<opensearch-rest-high-level-client.version>2.5.0</opensearch-rest-high-level-client.version>

		<!-- LogicNG (J11 UPDATED) -->
		<org.logicng.version>2.4.3</org.logicng.version>

		<!-- SPRING Framework (J11 UPDATED) -->
		<org.springframework.version>5.3.33</org.springframework.version>

		<!-- ORG JSON (J11 UPDATED) -->
		<org.json.version>20240303</org.json.version>

		<!-- Java JWT (J11 UPDATED) -->
		<java-jwt.version>4.4.0</java-jwt.version>

		<!-- SLF4J  (J11 UPDATED) -->
		<slf4j.version>2.0.12</slf4j.version>

		<!-- LOG4J (J11 UPDATED) -->
		<log4j.version>2.23.1</log4j.version>

		<!-- Mockito (J11 UPDATED) -->
		<mockito.version>5.2.0</mockito.version>

		<!-- GDAL -->
		<org.gdal.version>2.1.0</org.gdal.version>

		<!-- JAXB and schemas -->
		<org.jvnet.ogc-gml-v_3_2_1.version>2.4.0</org.jvnet.ogc-gml-v_3_2_1.version>
		<org.jvnet.ogc-gml-v_3_2_0.version>2.6.1</org.jvnet.ogc-gml-v_3_2_0.version>
		<org.jvnet.ogc-iso19139-v_20060504.version>2.6.1</org.jvnet.ogc-iso19139-v_20060504.version>
		<org.hisrc.w3c-xlink-v_1_0.version>1.3.0</org.hisrc.w3c-xlink-v_1_0.version>
		<org.ogc-schemas-wfs-v_1_1_0.version>3.0.0</org.ogc-schemas-wfs-v_1_1_0.version>
		<jvnet.ogc.version>2.6.1</jvnet.ogc.version>

		<!-- JAXB API and JAXB impl (commented Jakarta EE 9 dep)-->
		<jaxb-api.version>2.3.0</jaxb-api.version>
		<jaxb-impl.version>2.3.0</jaxb-impl.version>
		<jaxb-core.version>2.3.0</jaxb-core.version>
		<!-- <jakarta.xml.bind-api.version>4.0.2</jakarta.xml.bind-api.version>	-->

		<!-- Jacoco -->
		<jacoco.version>0.8.7</jacoco.version>
		<jacoco.outputDir>${project.build.directory}/target</jacoco.outputDir>
		<jacoco.out.ut.file>jacoco-ut.exec</jacoco.out.ut.file>
		<essi.jacoco.reportPath>${jacoco.outputDir}/${jacoco.out.ut.file}</essi.jacoco.reportPath>
		<jacoco.out.it.file>jacoco-it.exec</jacoco.out.it.file>
		<essi.jacoco.itReportPath>${jacoco.outputDir}/${jacoco.out.it.file}</essi.jacoco.itReportPath>
		<jacoco.plugin.version>0.8.7</jacoco.plugin.version>
		<org.sonarsource.java-sonar-jacoco-listeners.version>3.8</org.sonarsource.java-sonar-jacoco-listeners.version>

		<!-- Docker images -->
		<mySQLDocker.registry>
			672812193635.dkr.ecr.us-east-1.amazonaws.com/mysql:essi-0.1.3-configured</mySQLDocker.registry>

		<docker.elasticsearch>opensearchproject/opensearch:1.3.5</docker.elasticsearch>

	</properties>

	<dependencyManagement>
		<dependencies>

			<dependency>
				<groupId>org.apache.logging.log4j</groupId>
				<artifactId>log4j-core</artifactId>
				<version>${log4j.version}</version>
			</dependency>

			<dependency>
				<groupId>javax.xml.soap</groupId>
				<artifactId>javax.xml.soap-api</artifactId>
				<version>${jax-xml-soap-api.version}</version>
			</dependency>

			<dependency>
				<groupId>javax.xml.bind</groupId>
				<artifactId>jaxb-api</artifactId>
				<version>${jaxb-api.version}</version>
			</dependency>

			<dependency>
				<groupId>com.sun.xml.bind</groupId>
				<artifactId>jaxb-impl</artifactId>
				<version>${jaxb-impl.version}</version>
			</dependency>

			<dependency>
				<groupId>com.sun.xml.bind</groupId>
				<artifactId>jaxb-core</artifactId>
				<version>${jaxb-core.version}</version>
			</dependency>

			<dependency>
				<groupId>javax.mail</groupId>
				<artifactId>javax.mail-api</artifactId>
				<version>${javax.mail-api.version}</version>
			</dependency>

			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>javax.servlet-api</artifactId>
				<version>${java.servlet-api.version}</version>
				<scope>provided</scope>
			</dependency>

			<dependency>
				<groupId>javax.xml.ws</groupId>
				<artifactId>jaxws-api</artifactId>
				<version>${jax-ws-api.version}</version>
			</dependency>

			<dependency>
				<groupId>javax.ws.rs</groupId>
				<artifactId>javax.ws.rs-api</artifactId>
				<version>${jax-ws-rs-api.version}</version>
			</dependency>

			<!-- This is used for annotating objects to be serialized as json -->
			<dependency>
				<groupId>com.fasterxml.jackson.jaxrs</groupId>
				<artifactId>jackson-jaxrs-json-provider</artifactId>
				<version>${jackson.version}</version>
			</dependency>

			<dependency>
				<groupId>redis.clients</groupId>
				<artifactId>jedis</artifactId>
				<version>${redis.clients-jedis.version}</version>
			</dependency>

			<dependency>
				<groupId>dev.failsafe</groupId>
				<artifactId>failsafe</artifactId>
				<version>${dev.failsafe.version}</version>
			</dependency>

			<dependency>
				<groupId>com.squareup.okhttp3</groupId>
				<artifactId>okhttp</artifactId>
				<version>${com.squareup.okhttp3-okhtt.version}</version>
			</dependency>

			<dependency>
				<groupId>com.hivemq</groupId>
				<artifactId>hivemq-mqtt-client</artifactId>
				<version>${hivemq-mqtt-client.version}</version>
			</dependency>

			<dependency>
				<groupId>com.rometools</groupId>
				<artifactId>rome</artifactId>
				<version>${com.rometools.rome.version}</version>
			</dependency>

			<dependency>
				<groupId>org.eclipse.paho</groupId>
				<artifactId>org.eclipse.paho.client.mqttv3</artifactId>
				<version>${org.eclipse.paho.client.mqttv3.version}</version>
			</dependency>

			<dependency>
				<groupId>org.opensearch.client</groupId>
				<artifactId>opensearch-rest-high-level-client</artifactId>
				<version>${opensearch-rest-high-level-client.version}</version>
			</dependency>

			<dependency>
				<groupId>com.indeed</groupId>
				<artifactId>status-core</artifactId>
				<version>${status.version}</version>
			</dependency>

			<dependency>
				<groupId>org.logicng</groupId>
				<artifactId>logicng-j11</artifactId>
				<version>${org.logicng.version}</version>
			</dependency>

			<dependency>
				<groupId>org.ccil.cowan.tagsoup</groupId>
				<artifactId>tagsoup</artifactId>
				<version>${org.ccil.cowan.tagsoup.version}</version>
			</dependency>

			<!-- To use GDAL libraries, install version 2.1.0 -->
			<!-- e.g. apt-get install libgdal-dev libgdal-java -->
			<!-- and add -Djava.library.path=/usr/lib/jni/ -->
			<dependency>
				<groupId>org.gdal</groupId>
				<artifactId>gdal</artifactId>
				<version>${org.gdal.version}</version>
			</dependency>

			<dependency>
				<groupId>com.helger</groupId>
				<artifactId>ph-schematron-validator</artifactId>
				<version>${com.helger-ph-schematron-validator.version}</version>
			</dependency>

			<!-- As for AWS guide it's recommended to import the BOM:
			https://docs.aws.amazon.com/sdk-for-java/v1/developer-guide/setup-project-maven.html -->
			<dependency>
				<groupId>com.amazonaws</groupId>
				<artifactId>aws-java-sdk-bom</artifactId>
				<version>${aws-java-sdk-bom.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<dependency>
				<groupId>software.amazon.awssdk</groupId>
				<artifactId>s3-transfer-manager</artifactId>
				<version>${s3-transfer-manager.version}</version>
			</dependency>

			<!-- OGC Schemas from Aleksei Valikov -->
			<dependency>
				<groupId>org.jvnet.ogc</groupId>
				<artifactId>waterml-v_2_0</artifactId>
				<version>${jvnet.ogc.version}</version>
			</dependency>
			<dependency>
				<groupId>org.jvnet.ogc</groupId>
				<artifactId>wfs-v_1_1_0</artifactId>
				<version>${jvnet.ogc.version}</version>
			</dependency>
			<dependency>
				<groupId>org.jvnet.ogc</groupId>
				<artifactId>iso19139-v_20060504</artifactId>
				<version>${jvnet.ogc.version}</version>
			</dependency>
			<dependency>
				<groupId>org.jvnet.ogc</groupId>
				<artifactId>gml-v_3_2_0</artifactId>
				<version>${jvnet.ogc.version}</version>
			</dependency>
			<dependency>
				<groupId>org.jvnet.ogc</groupId>
				<artifactId>sensorML-v_2_0</artifactId>
				<version>${jvnet.ogc.version}</version>
			</dependency>
			<dependency>
				<groupId>org.jvnet.ogc</groupId>
				<artifactId>sos-v_2_0</artifactId>
				<version>${jvnet.ogc.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-lang3</artifactId>
				<version>${org.apache-commons-commons-lang3.version}</version>
			</dependency>

			<dependency>
				<groupId>commons-net</groupId>
				<artifactId>commons-net</artifactId>
				<version>${commons-net.version}</version>
			</dependency>

			<!-- Geo Tools -->
			<dependency>
				<groupId>org.geotools</groupId>
				<artifactId>gt-shapefile</artifactId>
				<version>${geotools-version}</version>
			</dependency>

			<dependency>
				<groupId>org.geotools</groupId>
				<artifactId>gt-swing</artifactId>
				<version>${geotools-version}</version>
			</dependency>

			<dependency>
				<groupId>org.geotools</groupId>
				<artifactId>gt-opengis</artifactId>
				<version>${geotools-version}</version>
			</dependency>

			<dependency>
				<groupId>org.geotools</groupId>
				<artifactId>gt-render</artifactId>
				<version>${geotools-version}</version>
			</dependency>

			<dependency>
				<groupId>org.geotools</groupId>
				<artifactId>gt-referencing</artifactId>
				<version>${geotools-version}</version>
			</dependency>

			<dependency>
				<groupId>org.geotools</groupId>
				<artifactId>gt-epsg-hsql</artifactId>
				<version>${geotools-version}</version>
			</dependency>

			<dependency>
				<groupId>org.geotools</groupId>
				<artifactId>gt-geotiff</artifactId>
				<version>${geotools-version}</version>
			</dependency>

			<dependency>
				<groupId>org.geotools</groupId>
				<artifactId>gt-netcdf</artifactId>
				<version>${geotools-version}</version>
				<exclusions>
					<exclusion>
						<groupId>org.slf4j</groupId>
						<artifactId>log4j-over-slf4j</artifactId>
					</exclusion>
					<exclusion>
						<groupId>opendap</groupId>
						<artifactId>opendap</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.glassfish.jaxb</groupId>
						<artifactId>jaxb-runtime</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<dependency>
				<groupId>org.geotools</groupId>
				<artifactId>gt-coverage</artifactId>
				<version>${geotools-version}</version>
			</dependency>

			<!-- Saxon Home Edition and Woodstox are imported by GS-XML -->
			<dependency>
				<groupId>net.sf.saxon</groupId>
				<artifactId>Saxon-HE</artifactId>
				<version>${saxon-he.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>apache-cxf</artifactId>
				<version>${cxf.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<dependency>
				<groupId>org.json</groupId>
				<artifactId>json</artifactId>
				<version>${org.json.version}</version>
			</dependency>

			<dependency>
				<groupId>org.sonarsource.java</groupId>
				<artifactId>sonar-jacoco-listeners</artifactId>
				<version>${org.sonarsource.java-sonar-jacoco-listeners.version}</version>
			</dependency>

			<dependency>
				<groupId>com.marklogic</groupId>
				<artifactId>marklogic-xcc</artifactId>
				<version>${xcc.version}</version>
			</dependency>

			<dependency>
				<groupId>com.marklogic</groupId>
				<artifactId>marklogic-client-api</artifactId>
				<version>${marklogic-client-api.version}</version>
				<exclusions>
					<exclusion>
						<groupId>javax.ws.rs</groupId>
						<artifactId>javax.ws.rs-api</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<dependency>
				<groupId>com.auth0</groupId>
				<artifactId>java-jwt</artifactId>
				<version>${java-jwt.version}</version>
			</dependency>

			<dependency>
				<groupId>org.eclipse.persistence</groupId>
				<artifactId>eclipselink</artifactId>
				<version>${eclipselink.version}</version>
				<exclusions>
					<exclusion>
						<artifactId>commonj.sdo</artifactId>
						<groupId>commonj.sdo</groupId>
					</exclusion>
				</exclusions>
			</dependency>

			<dependency>
				<groupId>org.openrdf.sesame</groupId>
				<artifactId>sesame-rio-api</artifactId>
				<version>${sesame.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.jena</groupId>
				<artifactId>jena-tdb</artifactId>
				<version>${org.apache.jena.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.jena</groupId>
				<artifactId>jena-arq</artifactId>
				<version>${org.apache.jena.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.jena</groupId>
				<artifactId>jena-shacl</artifactId>
				<version>${org.apache.jena.version}</version>
			</dependency>

			<dependency>
				<groupId>cloud.localstack</groupId>
				<artifactId>localstack-utils</artifactId>
				<version>${cloud.localstack.version}</version>
			</dependency>

			<dependency>
				<groupId>edu.ucar</groupId>
				<artifactId>cdm</artifactId>
				<version>${netcdf.version}</version>
				<scope>compile</scope>
				<!-- this CDM version imports Quartz 2.2.0 while we are using
				the 2.3.0 -->
				<exclusions>
					<exclusion>
						<groupId>org.quartz-scheduler</groupId>
						<artifactId>quartz</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<dependency>
				<groupId>edu.ucar</groupId>
				<artifactId>netcdf4</artifactId>
				<version>${netcdf.version}</version>
				<scope>compile</scope>
			</dependency>

			<dependency>
				<groupId>edu.ucar</groupId>
				<artifactId>opendap</artifactId>
				<version>${netcdf.version}</version>
				<scope>compile</scope>
			</dependency>

			<dependency>
				<groupId>org.ow2.authzforce</groupId>
				<artifactId>authzforce-ce-core-pdp-engine</artifactId>
				<version>${authzforce.version}</version>
			</dependency>

			<!--<dependency>
				<groupId>org.ow2.authzforce</groupId>
				<artifactId>authzforce-ce-xacml-model</artifactId>
				<version>${authzforce.version}</version>
			</dependency>-->

			<!-- https://mvnrepository.com/artifact/com.vaadin/vaadin-bom -->
			<dependency>
				<groupId>com.vaadin</groupId>
				<artifactId>vaadin-bom</artifactId>
				<version>${vaadin.version}</version>
				<type>pom</type>
			</dependency>

			<dependency>
				<groupId>com.vaadin</groupId>
				<artifactId>flow-server-production-mode</artifactId>
				<version>${vaadin.version}</version>
			</dependency>

			<dependency>
				<groupId>com.vaadin</groupId>
				<artifactId>vaadin-core</artifactId>
				<version>${vaadin.version}</version>
				<exclusions>
					<exclusion>
						<groupId>javax.validation</groupId>
						<artifactId>validation-api</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<dependency>
				<groupId>com.vaadin.componentfactory</groupId>
				<artifactId>togglebutton</artifactId>
				<version>${vaadin.togglebutton.version}</version>
			</dependency>

			<dependency>
				<groupId>com.google.apis</groupId>
				<artifactId>google-api-services-sheets</artifactId>
				<version>${google-api-services-sheets.version}</version>
			</dependency>

			<dependency>
				<groupId>org.jfree</groupId>
				<artifactId>jfreechart</artifactId>
				<version>${jfreechart.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.poi</groupId>
				<artifactId>poi</artifactId>
				<version>${org.apache.poi-poi.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.poi</groupId>
				<artifactId>poi-ooxml</artifactId>
				<version>${org.apache.poi-poi.version}</version>
				<exclusions>
					<exclusion>
						<groupId>stax</groupId>
						<artifactId>stax-api</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<dependency>
				<groupId>org.geonames</groupId>
				<artifactId>geonames-ws-client</artifactId>
				<version>${geonames.version}</version>
			</dependency>

			<dependency>
				<groupId>org.quartz-scheduler</groupId>
				<artifactId>quartz</artifactId>
				<version>${quartz.version}</version>
			</dependency>

			<dependency>
				<groupId>org.quartz-scheduler</groupId>
				<artifactId>quartz-jobs</artifactId>
				<version>${quartz.version}</version>
			</dependency>

			<dependency>
				<groupId>com.mysql</groupId>
				<artifactId>mysql-connector-j</artifactId>
				<version>${mysql.connector.version}</version>
			</dependency>

			<dependency>
				<groupId>org.mybatis</groupId>
				<artifactId>mybatis</artifactId>
				<version>${org.mybatis.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-compress</artifactId>
				<version>${org.apache.commons-commons-compress.version}</version>
			</dependency>

			<dependency>
				<groupId>org.knowm.xchart</groupId>
				<artifactId>xchart</artifactId>
				<version>${org.knowm.xchart-xchart.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-math3</artifactId>
				<version>${org.apache.commons-commons-math.version}</version>
			</dependency>

			<dependency>
				<groupId>org.jvnet.ogc</groupId>
				<artifactId>gml-v_3_2_1</artifactId>
				<version>${org.jvnet.ogc-gml-v_3_2_1.version}</version>
			</dependency>

			<dependency>
				<groupId>org.hisrc.w3c</groupId>
				<artifactId>xlink-v_1_0</artifactId>
				<version>${org.hisrc.w3c-xlink-v_1_0.version}</version>
			</dependency>

			<dependency>
				<groupId>org.ogc-schemas</groupId>
				<artifactId>wfs-v_1_1_0</artifactId>
				<version>${org.ogc-schemas-wfs-v_1_1_0.version}</version>
			</dependency>

			<dependency>
				<groupId>software.amazon.awssdk.iotdevicesdk</groupId>
				<artifactId>aws-iot-device-sdk</artifactId>
				<version>${aws-iot-device-sdk.version}</version>
			</dependency>

			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-reload4j</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-simple</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
		</dependencies>

	</dependencyManagement>

	<dependencies>

		<dependency>
			<groupId>javax.xml.bind</groupId>
			<artifactId>jaxb-api</artifactId>
		</dependency>

		<dependency>
			<groupId>com.sun.xml.bind</groupId>
			<artifactId>jaxb-impl</artifactId>
		</dependency>

		<dependency>
			<groupId>com.sun.xml.bind</groupId>
			<artifactId>jaxb-core</artifactId>
		</dependency>


		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>${mockito.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-inline</artifactId>
			<version>${mockito.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.google.protobuf</groupId>
			<artifactId>protobuf-java</artifactId>
			<version>${com.google.protobuf-protobuf-java.version}</version>
		</dependency>

		<dependency>
			<groupId>org.sonarsource.java</groupId>
			<artifactId>sonar-jacoco-listeners</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- Validation -->
		<dependency>
			<groupId>org.hibernate.validator</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>${org.hibernate.version}</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate.validator</groupId>
			<artifactId>hibernate-validator-annotation-processor</artifactId>
			<version>${org.hibernate.version}</version>
		</dependency>
		<dependency>
			<groupId>javax.el</groupId>
			<artifactId>javax.el-api</artifactId>
			<version>${javax.el-el-api.version}</version>
		</dependency>

		<dependency>
			<groupId>org.glassfish</groupId>
			<artifactId>javax.el</artifactId>
			<version>${org.glassfish-javax.el.version}</version>
		</dependency>
		<!-- JAVA VALIDATION -->

	</dependencies>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.sonarsource.scanner.maven</groupId>
					<artifactId>sonar-maven-plugin</artifactId>
					<version>${sonar.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<configuration>
						<skip>false</skip>
					</configuration>
					<executions>
						<execution>
							<phase>test</phase>
							<!-- <phase>test</phase> use this to run single test
							with -Dtest=TestClass 
								-Dmaven.surefire test -->
							<goals>
								<goal>test</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-failsafe-plugin</artifactId>
					<version>2.19.1</version>
					<executions>
						<execution>
							<id>integration-tests</id>
							<goals>
								<goal>integration-test</goal>
								<goal>verify</goal>
							</goals>
							<configuration>
								<!--suppress MavenModelInspection -->
								<skipTests>${skip.integration.tests}</skipTests>
							</configuration>
						</execution>
						<execution>
							<configuration>
								<argLine>${failsafeArgLine}</argLine>
							</configuration>
						</execution>
					</executions>
					<configuration>
						<systemPropertyVariables>
							<!--suppress MavenModelInspection -->
							<mysql.host>
								jdbc:mysql://${docker.host.address}:${mysql.port}</mysql.host>
						</systemPropertyVariables>
					</configuration>
				</plugin>

				<plugin>
					<groupId>io.fabric8</groupId>
					<artifactId>docker-maven-plugin</artifactId>
					<version>${docker.plugin.version}</version>

					<executions>
						<execution>
							<id>run-images</id>
							<phase>pre-integration-test</phase>
							<goals>
								<goal>build</goal>
								<goal>start</goal>
							</goals>
						</execution>
						<execution>
							<id>destroy-images</id>
							<phase>post-integration-test</phase>
							<goals>
								<goal>stop</goal>
								<goal>remove</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>external.atlassian.jgitflow</groupId>
					<artifactId>jgitflow-maven-plugin</artifactId>
					<version>1.0-m5.1</version>
				</plugin>
			</plugins>

		</pluginManagement>

		<plugins>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>license-maven-plugin</artifactId>
				<version>2.0.0</version>
				<configuration>
					<verbose>false</verbose>
					<addSvnKeyWords>false</addSvnKeyWords>
					<includes>
						<include>main/java/**/*.java</include>
					</includes>
				</configuration>
				<executions>
					<execution>
						<id>ufh</id>
						<goals>
							<goal>update-file-header</goal>
						</goals>
						<phase>process-sources</phase>
						<configuration>
							<licenseName>agpl_v3</licenseName>
							<inceptionYear>2021</inceptionYear>
							<organizationName><![CDATA[National Research Council of Italy (CNR)/Institute of Atmospheric Pollution Research (IIA)/ESSI-Lab]]></organizationName>
							<projectName><![CDATA[Discovery and Access Broker (DAB) Community Edition (CE)]]></projectName>
							<canUpdateCopyright>true</canUpdateCopyright>
							<canUpdateDescription>true</canUpdateDescription>
							<canUpdateLicense>true</canUpdateLicense>
						</configuration>
					</execution>
					<execution>
						<id>upl</id>
						<goals>
							<goal>update-project-license</goal>
						</goals>
						<phase>process-sources</phase>
						<configuration>
							<licenseName>agpl_v3</licenseName>
							<inceptionYear>2021</inceptionYear>
							<organizationName><![CDATA[National Research Council of Italy (CNR)/Institute of Atmospheric Pollution Research (IIA)/ESSI-Lab]]></organizationName>
							<projectName><![CDATA[Discovery and Access Broker (DAB) Community Edition (CE)]]></projectName>
						</configuration>
					</execution>
					<execution>
						<id>atp</id>
						<goals>
							<goal>add-third-party</goal>
						</goals>
						<phase>process-sources</phase>
					</execution>
					<execution>
						<id>default-cli</id>
						<configuration>
							<licenseMerges>
								<licenseMerge>The Apache Software License,
									Version 2.0|Apache License, Version
									2.0|Apache Public License 2.0|Apache License
									2.0|Apache 2.0|Apache 2|Apache Software
									License, 2.0|The Apache License, Version
									2.0|Apache Software License - Version
									2.0|Apache License Version 2.0</licenseMerge>
							</licenseMerges>
							<overrideFile>
								src/main/license/override-THIRD-PARTY.properties</overrideFile>
							<excludedGroups>eu.essi_lab</excludedGroups>

						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>external.atlassian.jgitflow</groupId>
				<artifactId>jgitflow-maven-plugin</artifactId>
				<configuration>
					<pushReleases>true</pushReleases>
					<noDeploy>true</noDeploy>
					<flowInitContext>
						<masterBranchName>master</masterBranchName>
						<developBranchName>develop</developBranchName>
						<featureBranchPrefix>feature/</featureBranchPrefix>
						<releaseBranchPrefix>release/</releaseBranchPrefix>
						<hotfixBranchPrefix>hotfix/</hotfixBranchPrefix>
						<versionTagPrefix>v</versionTagPrefix>
					</flowInitContext>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<configuration>
					<filteringDeploymentDescriptors>true</filteringDeploymentDescriptors>
				</configuration>
			</plugin>
			
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>11</source>
					<target>11</target>
					<useIncrementalCompilation>false</useIncrementalCompilation>
				</configuration>
			</plugin>


		</plugins>


	</build>

	<profiles>

		<profile>
			<id>teamcity</id>
			<properties>
				<docker.host.address>host.docker.internal</docker.host.address>
			</properties>
		</profile>

		<profile>
			<id>fast</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<configuration>
							<parallel>classes</parallel>
							<threadCount>10</threadCount>
							<runOrder>alphabetical</runOrder>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>internaltest</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-failsafe-plugin</artifactId>
						<executions>
							<execution>
								<id>integration-tests</id>
								<goals>
									<goal>integration-test</goal>
									<goal>verify</goal>
								</goals>
								<configuration>
									<!--suppress MavenModelInspection -->
									<skipTests>${skip.integration.tests}</skipTests>
									<excludes>
										<exclude>**/*ExternalTestIT.java</exclude>
									</excludes>
								</configuration>
							</execution>
							<execution>
								<configuration>
									<argLine>${failsafeArgLine}</argLine>
								</configuration>
							</execution>
						</executions>
						<configuration>
							<systemPropertyVariables>
								<mysql.host>
									jdbc:mysql://${docker.host.address}:${mysql.port}</mysql.host>
								<es.host>
									http://${docker.host.address}:${gi-elasticsearch.port}</es.host>
								<es.user>admin</es.user>
								<es.password>admin</es.password>
								<docker.username>${docker.username}</docker.username>
								<docker.password>${docker.password}</docker.password>
								<giProxyEndpoint>${giProxyEndpoint}</giProxyEndpoint>
								<sonar.login>${sonar.login}</sonar.login>
							</systemPropertyVariables>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>externaltest</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-failsafe-plugin</artifactId>
						<executions>
							<execution>
								<id>integration-tests</id>
								<goals>
									<goal>integration-test</goal>
									<goal>verify</goal>
								</goals>
								<configuration>
									<excludes>
										<exclude>**/*InternalTestIT.java</exclude>
									</excludes>
									<includes>
										<include>**/*ExternalTestIT.java</include>
									</includes>
									<!--suppress MavenModelInspection -->
									<skipTests>${skip.integration.tests}</skipTests>
								</configuration>
							</execution>
							<execution>
								<configuration>
									<argLine>${failsafeArgLine}</argLine>
								</configuration>
							</execution>
						</executions>
						<configuration>
							<systemPropertyVariables>
								<!--suppress MavenModelInspection -->
								<mqttBrokerHost>${mqttBrokerHost}</mqttBrokerHost>
								<mqttBrokerPort>${mqttBrokerPort}</mqttBrokerPort>
								<mqttBrokerUser>${mqttBrokerUser}</mqttBrokerUser>
								<mqttBrokerPwd>${mqttBrokerPwd}</mqttBrokerPwd>

								<!--suppress MavenModelInspection -->
								<mysql.host>
									jdbc:mysql://${docker.host.address}:${mysql.port}</mysql.host>
								<mysql-zombie.host>
									jdbc:mysql://${docker.host.address}:${mysql-zombie.port}</mysql-zombie.host>
								<es.host>
									http://${docker.host.address}:${gi-elasticsearch.port}</es.host>
								<es.user>admin</es.user>
								<es.password>admin</es.password>
								<docker.username>${docker.username}</docker.username>
								<docker.password>${docker.password}</docker.password>
								<giProxyEndpoint>${giProxyEndpoint}</giProxyEndpoint>
								<sonar.login>${sonar.login}</sonar.login>
								<accessKey>${accessKey}</accessKey>
								<secretKey>${secretKey}</secretKey>

							</systemPropertyVariables>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>


		<profile>
			<id>sonar</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<properties>
				<!-- Optional URL to server. Default value is
				http://localhost:9000 -->
				<sonar.host.url>https://sonar.essi-lab.eu</sonar.host.url>
				<sonar.exclusions>
					**/*.js,**/*.jsx,src/main/java/eu/essi_lab/jaxb/**,src/main/java/eu/essi_lab/jaxb/*,src/main/java/eu/essi_lab/wigos/_1_0_rc_6/**,src/main/java/eu/essi_lab/wigos/_1_0_rc_6/*,src/main/java/eu/essi_lab/ogc/pubsub/*,src/main/java/eu/essi_lab/ogc/pubsub/**,src/main/java/org/cuahsi/waterml/_1/*,src/main/java/org/cuahsi/waterml/_1/**</sonar.exclusions>
				<sonar.junit.reportPaths>
					${project.build.directory}/surefire-reports,${project.build.directory}/failsafe-reports</sonar.junit.reportPaths>


				<sonar.coverage.jacoco.xmlReportPaths>
					${jacoco.outputDir}/jacoco.xml,${jacoco.outputDir}/jacoco-it-xml/jacoco.xml</sonar.coverage.jacoco.xmlReportPaths>
			</properties>
		</profile>
		<profile>
			<id>cleantmp</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>

			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<executions>
							<execution>
								<id>default-cli</id>
								<configuration>
									<target>
										<mkdir dir="${jacoco.outputDir}/" />
										<delete>
											<fileset dir="${jacoco.outputDir}/"
												includes="*.*" />
										</delete>
									</target>
								</configuration>
							</execution>
						</executions>

					</plugin>
				</plugins>
			</build>

		</profile>
		<profile>
			<id>coverage</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<configuration>
							<argLine>${jacoco.agent.ut.arg}</argLine>
							<properties>
								<property>
									<name>listener</name>
									<value>org.sonar.java.jacoco.JUnitListener</value>
								</property>
							</properties>
						</configuration>
						<executions>
							<execution>
								<phase>test</phase>
								<goals>
									<goal>test</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-failsafe-plugin</artifactId>
						<configuration>
							<argLine>${jacoco.agent.it.arg}</argLine>
							<properties>
								<property>
									<name>listener</name>
									<value>org.sonar.java.jacoco.JUnitListener</value>
								</property>
							</properties>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
						<version>${jacoco.version}</version>
						<executions>
							<!-- Prepares a variable, jacoco.agent.ut.arg, that
							contains the info 
								to be passed to the JVM hosting the code being tested. -->
							<execution>
								<id>prepare-ut-agent</id>
								<phase>process-test-classes</phase>
								<goals>
									<goal>prepare-agent</goal>
								</goals>
								<configuration>
									<destFile>${essi.jacoco.reportPath}</destFile>
									<propertyName>jacoco.agent.ut.arg</propertyName>
									<append>true</append>
								</configuration>
							</execution>
							<!-- Prepares a variable, jacoco.agent.it.arg, that
							contains the info 
								to be passed to the JVM hosting the code being tested. -->
							<execution>
								<id>prepare-it-agent</id>
								<phase>pre-integration-test</phase>
								<goals>
									<goal>prepare-agent-integration</goal>
								</goals>
								<configuration>
									<destFile>${essi.jacoco.itReportPath}</destFile>
									<propertyName>jacoco.agent.it.arg</propertyName>
									<append>true</append>
								</configuration>
							</execution>
							<execution>
								<id>report</id>
								<goals>
									<goal>report</goal>
								</goals>
								<configuration>
									<dataFile>${essi.jacoco.reportPath}</dataFile>
									<!-- <formats>XML</formats> -->
									<outputDirectory>${jacoco.outputDir}/</outputDirectory>
								</configuration>
							</execution>

							<execution>
								<id>report-integration</id>
								<goals>
									<goal>report-integration</goal>
								</goals>
								<configuration>
									<dataFile>${essi.jacoco.itReportPath}</dataFile>
									<!-- <formats>XML</formats> -->
									<outputDirectory>
										${jacoco.outputDir}/jacoco-it-xml/</outputDirectory>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>coverage-non-it</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<configuration>
							<argLine>${jacoco.agent.ut.arg}</argLine>
							<properties>
								<property>
									<name>listener</name>
									<value>org.sonar.java.jacoco.JUnitListener</value>
								</property>
							</properties>
						</configuration>
						<executions>
							<execution>
								<phase>test</phase>
								<goals>
									<goal>test</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
						<version>${jacoco.version}</version>
						<executions>
							<!-- Prepares a variable, jacoco.agent.ut.arg, that
							contains the info 
								to be passed to the JVM hosting the code being tested. -->
							<execution>
								<id>prepare-ut-agent</id>
								<phase>process-test-classes</phase>
								<goals>
									<goal>prepare-agent</goal>
								</goals>
								<configuration>
									<destFile>${essi.jacoco.reportPath}</destFile>
									<propertyName>jacoco.agent.ut.arg</propertyName>
									<append>true</append>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>java7</id>
			<activation>
				<activeByDefault>false</activeByDefault>
				<property>
					<name>java7</name>
					<value>true</value>
				</property>
			</activation>
			<build>
				<plugins>
					<!-- compiler set to 1.7 -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-compiler-plugin</artifactId>
						<configuration>
							<source>1.7</source>
							<target>1.7</target>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>

	</profiles>

	<modules>

		<module>core-messages</module>
		<module>core-datamodel</module>
		<module>core-datamodel-iso</module>

		<!-- multi module -->
		<module>profiler</module>

		<module>profiler-dev-kit</module>

		<!-- multi module -->
		<module>access-tools-downloader</module>

		<!-- multi module -->
		<module>access-tools-validator</module>

		<!-- multi module -->
		<module>accessor</module>

		<module>accessor-dev-kit</module>

		<!-- multi module -->
		<module>gs-lib</module>

		<!-- multi module -->
		<module>jaxb-classes</module>

		<module>database-api</module>
		<module>database-api-marklogic-impl</module>
		<module>database-api-elasticsearch-impl</module>
		<module>database-api-volatile-impl</module>
		<module>database-indexes</module>
		<module>database-wrapper-marklogic</module>

		<module>request-executor</module>
		<module>request-executor-default</module>

		<module>identifier-decorator</module>
		<module>gs-service</module>

		<module>security</module>

		<module>harvester</module>

		<module>augmenter</module>
		<module>augmenter-worker</module>

		<module>gs-shared-content</module>

		<module>views</module>

		<!-- access tools -->
		<module>access-tools</module>
		<module>access-tools-workflow-engine</module>
		<module>access-tools-test</module>

		<!-- demo extension pack -->
		<!-- <module>demo-extensions-pack</module> -->

		<!-- drivers -->
		<module>gs-driver-elasticsearch</module>
		<module>gs-driver-database</module>
		<module>gs-driver-local-cache</module>

		<module>runtime-info-provider</module>

		<module>configuration-api</module>
		<module>configuration-api-gs</module>
		<module>configuration-api-gui</module>
		<module>configuration-api-test</module>
	</modules>

	<repositories>

		<repository>
			<id>hosted.repos</id>
			<name>ESSI-Lab hosted repositories</name>
			<url>https://essi-lab.eu/nexus/repository/hosted.repos/</url>
			<releases>
				<enabled>true</enabled>
				<updatePolicy>never</updatePolicy>
			</releases>
			<snapshots>
				<enabled>false</enabled>
				<updatePolicy>never</updatePolicy>
			</snapshots>
		</repository>

		<repository>
			<id>central</id>
			<name>Central Repository</name>
			<url>https://repo.maven.apache.org/maven2</url>
			<layout>default</layout>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		


		<repository>
			<id>MarkLogic-releases</id>
			<name>MarkLogic Releases</name>
			<url>https://developer.marklogic.com/maven2</url>
			<releases>
				<enabled>true</enabled>
				<updatePolicy>never</updatePolicy>
			</releases>
		</repository>

		<repository>
			<id>unidata</id>
			<name>Unidata</name>
			<url>
				https://artifacts.unidata.ucar.edu/content/repositories/unidata-releases/</url>
		</repository>

		<repository>
			<id>osgeo-release</id>
			<name>OSGeo Release Repository</name>
			<url>https://repo.osgeo.org/repository/release/</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
			<releases>
				<enabled>true</enabled>
			</releases>
		</repository>

		<repository>
			<id>osgeo-snapshot</id>
			<name>OSGeo Snapshot Repository</name>
			<url>https://repo.osgeo.org/repository/snapshot/</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
			<releases>
				<enabled>false</enabled>
			</releases>
		</repository>

		<repository>
			<id>osgeos-geotools</id>
			<name>OS Geo Dev Tools</name>
			<url>https://download.osgeo.org/webdav/geotools</url>
			<releases>
				<enabled>true</enabled>
				<updatePolicy>never</updatePolicy>
			</releases>
		</repository>

		<repository>
			<id>geosolutions</id>
			<name>geosolutions</name>
			<url>https://maven.geo-solutions.it/</url>
			<releases>
				<updatePolicy>never</updatePolicy>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>

		<repository>
			<id>geotoolkit</id>
			<name>geotoolkit</name>
			<url>https://nexus.geomatys.com/repository/geotoolkit/</url>
			<releases>
				<updatePolicy>never</updatePolicy>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>

		<repository>
			<id>boundless</id>
			<name>repo.boundlessgeo.com</name>
			<url>https://repo.osgeo.org/</url>
			<releases>
				<updatePolicy>never</updatePolicy>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>



		<repository>
			<id>geotools</id>
			<name>geotools</name>
			<url>https://download.osgeo.org/webdav/geotools/</url>
			<releases>
				<updatePolicy>never</updatePolicy>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>

		<repository>
			<id>vaadin-addons</id>
			<url>https://maven.vaadin.com/vaadin-addons</url>
		</repository>

	</repositories>

</project>
