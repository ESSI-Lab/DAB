# #%L
# Discovery and Access Broker (DAB) Community Edition (CE)
# %%
# Copyright (C) 2021 National Research Council of Italy (CNR)/Institute of Atmospheric Pollution Research (IIA)/ESSI-Lab
# %%
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
# #L%
###
# Properties file for use by StdSchedulerFactory
# to create a Quartz Scheduler Instance
#
#============================================================================
#these come from the default config
#============================================================================
org.quartz.scheduler.instanceName=DefaultQuartzScheduler
org.quartz.scheduler.rmi.export=false
org.quartz.scheduler.rmi.proxy=false
org.quartz.scheduler.wrapJobExecutionInUserTransaction=false
#============================================================================
#============================================================================
#============================================================================
#============================================================================
# Configure Main Scheduler Properties
#============================================================================
org.quartz.scheduler.instanceId=AUTO
#the property below is not very clear yet, default is false. this comes from example @ https://myshittycode.com/2013/09/26/configuring-quartz-scheduler-to-run-in-clustered-environment/
org.quartz.scheduler.makeSchedulerThreadDaemon=true
#============================================================================
# Configure ThreadPool
#============================================================================
org.quartz.threadPool.class=org.quartz.simpl.SimpleThreadPool
org.quartz.threadPool.threadCount=2
#the property below is not very clear yet, default is false. this comes from example @ https://myshittycode.com/2013/09/26/configuring-quartz-scheduler-to-run-in-clustered-environment/
org.quartz.threadPool.makeThreadsDaemons=true
org.quartz.threadPool.threadsInheritContextClassLoaderOfInitializingThread=true
#============================================================================
# Configure JobStore
#============================================================================


#the threashold (in milliseconds) which quartz uses to determine if a job has a misfire or not
#Default is 60000, I set it to 1 sc mainly for test puposes. This low setting should not really impact normal functionalities
org.quartz.jobStore.misfireThreshold=60000

#here I define the name of the datasource where my jobs are stored, the datasource properties are defined in section Configure Datasources
#org.quartz.jobStore.dataSource = myDS
#org.quartz.jobStore.tablePrefix = QRTZ_
#org.quartz.jobStore.class: org.quartz.impl.jdbcjobstore.JobStoreTX
org.quartz.jobStore.class=org.quartz.simpl.RAMJobStore
#org.quartz.jobStore.driverDelegateClass = org.quartz.impl.jdbcjobstore.StdJDBCDelegate
#org.quartz.jobStore.isClustered=true


#============================================================================
# Configure Datasources
#============================================================================

org.quartz.dataSource.myDS.driver = com.mysql.cj.jdbc.Driver
org.quartz.dataSource.myDS.URL = jdbc:mysql://localhost:3306/quartzJobStore


org.quartz.dataSource.myDS.user = root
org.quartz.dataSource.myDS.password = pdw
org.quartz.dataSource.myDS.maxConnections = 5
org.quartz.dataSource.myDS.validationQuery=select 0 from dual

