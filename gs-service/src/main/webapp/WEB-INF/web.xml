<?xml version="1.0" encoding="UTF-8"?>
<web-app version="3.0" xmlns="http://java.sun.com/xml/ns/javaee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd">

	<display-name>${project.name} ${project.version}</display-name>

	<context-param>

		<!-- See https://vaadin.com/docs/v14/guide/configuration for other properties -->

		<!-- Set the Vaadin heartbeat interval to 30 seconds -->
		<!-- Used by SingleTabManager to detect if the tab with the configuration 
			view has been closed -->

		<param-name>heartbeatInterval</param-name>
		<param-value>30</param-value>
	</context-param>

	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath:applicationContext.xml</param-value>
	</context-param>

	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

	<listener>
		<listener-class>eu.essi_lab.gssrv.servlet.ServletListener</listener-class>
	</listener>

	<!-- Context Listener to setup the dataset -->
	<listener>
		<listener-class>eu.essi_lab.dab.sparql.DatasetContextListener</listener-class>
	</listener>
	<!-- ================================================ -->
	<!-- Default servlet with disabled file mapper buffer -->
	<!-- ================================================ <servlet> <servlet-name>default</servlet-name> 
		<servlet-class>org.eclipse.jetty.servlet.DefaultServlet</servlet-class> <init-param> 
		<param-name>useFileMappedBuffer</param-name> <param-value>false</param-value> 
		</init-param> </servlet> -->

	<!-- ===================== -->
	<!-- Authenticator servlet -->
	<!-- ===================== -->

	<servlet>
		<servlet-name>authenticator</servlet-name>
		<servlet-class>org.apache.cxf.transport.servlet.CXFServlet</servlet-class>
		<load-on-startup>1</load-on-startup>
	</servlet>

	<servlet-mapping>
		<servlet-name>authenticator</servlet-name>
		<url-pattern>/auth/*</url-pattern>
	</servlet-mapping>

	<!-- ===================== -->
	<!-- Dispatcher servlet -->
	<!-- ===================== -->

	<servlet>
		<servlet-name>dispatcher</servlet-name>
		<servlet-class>org.apache.cxf.transport.servlet.CXFServlet</servlet-class>
		<load-on-startup>1</load-on-startup>
		<!-- remove comment to enable async support -->
		<!-- <async-supported>true</async-supported> -->
		<async-supported>true</async-supported>

	</servlet>

	<servlet-mapping>
		<servlet-name>dispatcher</servlet-name>
		<url-pattern>/services/*</url-pattern>
	</servlet-mapping>

	<!-- ===================== -->
	<!-- PubSub servlet -->
	<!-- ===================== -->

	<servlet>
		<servlet-name>PubSubService</servlet-name>
		<servlet-class>eu.essi_lab.gssrv.servlet.PubSubService</servlet-class>
		<load-on-startup>1</load-on-startup>
	</servlet>

	<servlet-mapping>
		<servlet-name>PubSubService</servlet-name>
		<url-pattern>/services/essi/pubsub/*</url-pattern>
	</servlet-mapping>



	<!-- SPARQL query servlet -->
	<servlet>
		<servlet-name>SPARQL</servlet-name>
        <servlet-class>org.apache.jena.fuseki.servlets.SPARQL_QueryGeneral</servlet-class>
	</servlet>

	<servlet-mapping>
		<servlet-name>SPARQL</servlet-name>
		<url-pattern>/sparql/*</url-pattern>
	</servlet-mapping>




	<!-- ===================== -->
	<!-- Vaadin servlet -->
	<!-- ===================== -->

	<servlet>
		<servlet-name>Vaadin</servlet-name>
		<servlet-class>com.vaadin.flow.server.VaadinServlet</servlet-class>
		<init-param>
			<!-- See https://vaadin.com/docs/v23/configuration/properties for other 
				properties -->

			<!-- Set the Vaadin heartbeat interval to 30 seconds -->
			<!-- Used by SingleTabManager to detect if the tab with the configuration 
				view has been closed -->

			<param-name>heartbeatInterval</param-name>
			<param-value>30</param-value>
		</init-param>

		<load-on-startup>1</load-on-startup>
	</servlet>

	<servlet-mapping>
		<servlet-name>Vaadin</servlet-name>
		<url-pattern>/configuration/*</url-pattern>
	</servlet-mapping>

	<filter>
		<filter-name>RequestLoggingFilter</filter-name>
		<filter-class>eu.essi_lab.gssrv.servlet.RequestLoggingFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>RequestLoggingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!-- ================================== -->
	<!-- RateLimiterFilter -->
	<!-- ================================== -->

	<filter>
		<filter-name>RateLimiterFilter</filter-name>
		<filter-class>eu.essi_lab.gssrv.servlet.RateLimiterFilter</filter-class>
	</filter>

	<filter-mapping>
		<filter-name>RateLimiterFilter</filter-name>
		<url-pattern>*</url-pattern>
	</filter-mapping>

	<!-- ===================== -->
	<!-- UserFinderFilter -->
	<!-- ===================== -->

	<filter>
		<filter-name>user-finder-filter</filter-name>
		<filter-class>eu.essi_lab.gssrv.servlet.UserFinderFilter</filter-class>
	</filter>

	<filter-mapping>
		<filter-name>user-finder-filter</filter-name>
		<url-pattern>/configuration/*</url-pattern>
	</filter-mapping>

	<filter-mapping>
		<filter-name>user-finder-filter</filter-name>
		<url-pattern>/services/*</url-pattern>
	</filter-mapping>

	<!-- ===================== -->
	<!-- CorsFilter -->
	<!-- ===================== -->

	<filter>
		<filter-name>CorsFilter</filter-name>
		<filter-class>eu.essi_lab.gssrv.servlet.CORSDelegatorFilter</filter-class>
		<async-supported>true</async-supported>
		<init-param>
			<param-name>cors.allowed.origins</param-name>
			<param-value>*</param-value>
		</init-param>
		<init-param>
			<param-name>cors.allowed.methods</param-name>
			<param-value>GET,POST,HEAD,OPTIONS,PUT</param-value>
		</init-param>
		<init-param>
			<param-name>cors.allowed.headers</param-name>
			<param-value>Content-Type,X-Requested-With,accept,Origin,Access-Control-Request-Method,Access-Control-Request-Headers,Sec-Fetch-Dest,Sec-Fetch-Mode,Sec-Fetch-Site,Mirrorsiteclient</param-value>
		</init-param>
		<init-param>
			<param-name>cors.exposed.headers</param-name>
			<param-value>Access-Control-Allow-Origin,Access-Control-Allow-Credentials</param-value>
		</init-param>
		<!-- commented, as raises an error on the new tomcat init-param> <param-name>cors.support.credentials</param-name> 
			<param-value>true</param-value> </init-param -->
		<init-param>
			<param-name>cors.preflight.maxage</param-name>
			<param-value>10</param-value>
		</init-param>
		<init-param>
			<param-name>cors.request.decorate</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>

	<filter-mapping>
		<filter-name>CorsFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!-- ======================== -->
	<!-- ProfilerServiceFilter -->
	<!-- ======================== -->

	<filter>
		<filter-name>ProfilerServiceFilter</filter-name>
		<filter-class>eu.essi_lab.gssrv.servlet.ProfilerServiceFilter</filter-class>
		<async-supported>true</async-supported>
	</filter>

	<filter-mapping>
		<filter-name>ProfilerServiceFilter</filter-name>
		<url-pattern>*</url-pattern>
	</filter-mapping>

</web-app>
